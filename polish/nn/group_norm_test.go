package nn

import (
	"math"
	"testing"
)

func TestGroupNorm(t *testing.T) {
	in := NewTensor(4, 5, 12)
	copy(in.Data, []float32{
		-1.0221001, -1.5796757, 1.7134480, -0.6383699, -0.8252002, -0.3276477, -1.0969015, -0.3216827, 0.9023801, -0.2086772, -0.0098957, 0.3430660, -0.9665561, -1.0619389, 0.7971905, 2.5056205, 1.7643378, 0.6906035, -0.4143253, -0.9578822, 0.9929895, -0.3113273, -0.0693117, 0.4030469, -0.1519197, -1.5732781, -0.2080776, 1.2209413, 0.4384030, -1.7938681, -2.1126060, 0.6378745, -0.6695310, -1.0245168, -0.9538743, 0.0238561, -0.0467072, 0.5612687, 1.0865034, 1.5901088, -1.3611679, 0.8314494, 2.0650454, -0.3145818, -0.5839299, 0.4105616, -1.1479204, -0.5899442, 0.5731580, -1.5805511, 1.0306307, -0.3374717, 0.8066963, 1.9507209, 0.2116757, 0.1386233, -0.8553388, 0.4269760, 0.7171491, 0.4923056, -0.3509787, 0.3014634, 0.7269417, 1.6744821, 1.0522863, 0.2112580, -0.9874152, 0.5523420, 0.0158053, -0.3125320, 1.9377381, 0.1459422, 0.5488644, 0.6677971, -0.9905274, 1.6344807, 0.1424473, -0.0821457, 1.1207696, 0.0182036, 1.4424065, -0.0713405, 0.4244196, 0.0350529, 1.0896454, 2.0629742, 0.7795575, 1.0992870, -0.9697220, 0.2713334, -1.3391825, -0.5634347, -0.6239132, -0.4311570, -0.4288743, -1.9728240, 2.0597763, -0.7501921, -0.6738955, -0.6277537, -0.7750289, -1.4438819, 0.2871203, -0.9755278, 0.3835825, -0.6603342, 2.0187373, -0.9440562, 0.0718082, -0.1985949, 1.2051098, -0.1503626, 1.3310804, 0.0989851, 0.0927790, -1.0305945, -1.0669045, 0.8813666, 0.0706334, 0.7924773, -0.5513872, 0.5201599, -1.3582357, 0.0590850, 0.0187143, -0.4046591, 1.2982638, -0.3689553, 0.3967363, 0.5261109, 0.2245125, -0.7741958, -0.4043697, -0.6617534, -0.6659707, -0.4774512, 1.8953596, 2.0029273, 1.4613733, -1.8399051, 0.0611079, -1.4877330, -0.3591553, -1.1237507, 0.8407897, 0.9940514, -0.1909862, 0.3209904, 0.5886565, 1.5291401, 0.1317610, 0.6872989, -0.9559830, 1.4065583, 0.1249584, 0.4124418, -0.2684685, 1.4394376, -0.0221158, 0.5195087, -0.9137533, 0.9451744, -0.4042242, -0.6771299, -0.9027446, 1.0519906, -0.7811508, -0.0777123, -0.3535839, 1.1632098, -0.4913792, 0.3651035, -0.8887430, -1.0435823, -0.0712068, 0.1240887, -0.6695143, -1.3721397, 0.1611713, 1.6129134, 1.4333644, -1.5874431, 0.4289396, -0.4726154, -2.1013939, -1.2848064, 2.4758003, 0.7925473, 2.1013570, 0.1712477, 0.9803172, 0.4901890, -0.0817213, -0.6183630, -3.1022520, 0.6858925, -2.0902109, -1.6194723, -0.5491874, 0.5372946, 0.8821929, -0.7812951, -0.5972003, -0.3235330, 0.1639364, -0.8202379, 0.8938593, -0.3348892, 0.0765916, -0.3791303, -0.2271143, -0.7200960, 0.0506867, -1.0809671, -0.3619950, 0.0645623, 1.5365840, -1.4482405, 0.5266994, -0.2942330, 0.2541175, -0.6751279, -0.3904678, 1.1792732, -0.6438045, -0.7042071, 1.7414868, -0.8441688, 1.1386329, -1.0414594, -1.1076441, -0.8434691, -2.3673568, -1.6799883, 0.8815190, -1.1306807, -0.2620730, 0.2116996, 1.2455457, -0.1427833,
	})
	expected := NewTensor(4, 5, 12)
	copy(expected.Data, []float32{
		-1.1425461, 0.9038563, -1.4868827, -0.4609960, 1.4304428, -0.8965625, -0.6618699, -0.0191097, -0.7013139, 1.5647557, 1.0326166, 0.4262294, -1.7087859, -0.4207285, 0.7398060, 0.2015845, -0.1581028, -1.5984653, 0.4626254, -1.6444832, 1.0934234, -1.3517406, -0.5734295, -0.4709284, 1.6355102, -0.1749521, 1.9925710, 0.6336744, 0.3621542, 0.2180706, -1.5085871, -0.4601394, -0.2093793, 0.5950147, -0.3956917, -0.1960979, -0.7528531, 0.3047465, -0.4240335, 1.5959388, -0.0464522, -1.1069686, -0.0212326, -1.2625155, -0.4728613, -0.2754089, -0.1314744, 1.3194387, -0.9425865, -0.2588438, -0.6975671, 0.9640745, 1.0602508, 0.3192993, -0.0635981, 0.7990984, -0.6906853, -1.8479443, 0.3391623, -0.4406866, -0.4373025, -1.7022889, 0.3123779, 0.1099774, 2.0816746, -0.7762004, -0.5078916, 0.9599332, 1.1965512, -1.0595541, -0.6110276, -0.4990035, -1.2185099, -0.3158744, -1.2703215, -1.1073222, 0.7348406, 2.0352519, 1.2791775, -0.2836605, -0.5732903, 2.5711954, 1.0438803, 1.8622384, -0.4312448, 1.1353503, -0.7036749, 0.4563615, 1.0703688, -1.0739418, -0.4704235, 0.2536142, 0.1058579, 0.9460666, -0.1424384, -0.6341322, 0.8118389, 0.3406520, 0.4775009, -0.0885126, -1.1008759, -0.0078807, 0.3331030, 0.5345066, -0.1604876, 2.2096820, 0.2548335, 1.2802017, -0.3164833, -1.9263067, -1.7096750, -0.4219519, 0.2015036, -0.2916452, 0.4688705, 1.5214622, 1.3039299, 0.3462211, -0.1851519, -0.8246102, -0.1146129, -2.2499976, 0.9420825, 1.8632855, -1.4885924, 1.1814206, 0.1523692, 0.0550345, -0.2935247, 1.1273528, -0.0383851, -0.8885095, 0.2438335, 0.5432231, -0.4472791, 0.0436466, -0.6745127, -0.2410295, -0.8956881, 0.6380231, 0.5333828, 0.6541491, -0.5143437, -0.6334567, -1.0861390, -0.7844984, 0.7146683, 0.4528299, -0.7379797, 1.3136158, -0.5075879, -1.0864580, -0.6771672, 0.1019873, 0.2298232, -2.1047232, -1.1830039, -1.1450003, 1.8764701, 0.5736107, -0.5356988, 0.0206390, -0.7776896, 1.3928232, -0.8266598, -0.4161237, -0.8627536, -1.4410900, 0.7050148, -1.0732602, 0.1104015, -1.1104828, -0.5333033, 0.0141263, -0.7821154, 0.0478958, 0.1121387, -2.8142419, -0.1686083, 1.0319661, 2.4399924, -0.0803367, 0.0362140, 1.5553157, -2.1535442, -1.1647562, -0.5842806, 0.3495846, 0.3006905, 0.8430947, 0.2432196, -0.9107506, 1.6871907, -0.1519964, -0.9731934, 0.0400974, 2.0783186, -1.2028605, 1.9057776, -0.3649714, -0.4655087, -1.8371475, 1.6644112, -0.0721367, 0.5967715, 0.4654269, 0.3290475, -0.1879856, -0.8704984, 0.8416802, 2.0186605, 1.4273272, -1.1438719, -1.3826638, -1.2173449, 0.3852761, -0.5253270, 0.9988233, 0.6237296, 1.0336220, -0.7904317, -0.0091135, 1.4503468, -0.1064457, 0.3364926, -0.3493368, 0.6893988, 1.3834227, -1.0773302, 1.5102543, 0.3953922, -0.0860769, -0.7420099, 0.7483987, -2.0140572, 0.4619420, 1.7381047, 0.6996281, -0.1031862, 0.0430338,
	})
	actual := (&GroupNorm{NumGroups: 3}).Apply(expected)
	if len(expected.Data) != len(actual.Data) {
		t.Fatal("incorrect output shape")
	}
	for i, x := range expected.Data {
		a := actual.Data[i]
		if math.Abs(float64(x-a)) > 1e-4 {
			t.Errorf("data index %d: expected %f but got %f", i, x, a)
		}
	}
}
